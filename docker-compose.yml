---
version: "3.8"
services:
  terraform:
    working_dir: "/usr/src/app"
    image: "hashicorp/terraform:latest"
    volumes:
      - "./terraform/:/usr/src/app/"
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_REGION: "${AWS_REGION}"
      TF_VAR_gh_access_token: "${TF_VAR_gh_access_token}"
      TF_TOKEN_app_terraform_io: "${TF_TOKEN_app_terraform_io}"
  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    restart: "unless-stopped"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik.toml:/traefik.toml"
      - ./traefik/acme.json:/acme.json
    networks:
      - "devknot"
    labels:
      - "traefik.frontend.rule=Host:traefik.local.dev-knot.com"
      - "traefik.port=8080"
      - "traefik.backend=traefik"
      - "traefik.frontend.entryPoints=http,https"
  hugo:
    image: "klakegg/hugo:latest"
    container_name: "hugo"
    networks:
      - "devknot"
    working_dir: "/usr/src/app"
    command: "serve --minify --config ./config.toml -e production"
    volumes:
      - "./dev-knot:/usr/src/app"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hugo.rule=Host(`dev-serv-01`)" # some local dns entry
      - "traefik.port=1313"
      - "traefik.http.routers.hugo.entryPoints=web"
    restart: unless-stopped
    depends_on:
      - "traefik"
networks:
  devknot:
    external:
      name: devknot
